{
    "task": "Refactor JS file → TypeScript with types + JSDoc; preserve runtime; ship with tests.",
    "scope": {
      "file": "<path/to/file.js>",
      "convert_to": "ts or tsx (decide automatically)",
      "tests": "generate or update in project’s test location"
    },
    "context_exploration": {
      "detect_runtime": "analyze repo (package.json, framework files, src entrypoints) to decide Node/Browser/React",
      "detect_module_system": "check tsconfig.json + package.json (type: module, etc.)",
      "detect_path_aliases": "read tsconfig.json paths",
      "detect_shared_types": "scan src/@types or common types dirs",
      "detect_testing_framework": "read package.json devDependencies (jest, vitest, mocha, etc.)",
      "detect_lint_format": "read eslint/prettier config files",
      "detect_strictness": "read tsconfig.json flags (strict, noUncheckedIndexedAccess, etc.)",
      "detect_file_structure": "infer where tests and types live based on existing files"
    },
    "requirements": {
      "runtime": "must be 100% preserved",
      "api_surface": "exports unchanged",
      "types": "precise, no implicit any; prefer imports from shared types; fallback unknown with TODO",
      "jsdoc": "concise @param, @returns, @throws, side effects",
      "tests": "cover happy path + edge cases + errors; no unnecessary mocks",
      "dependencies": "no new runtime deps, dev-only types if unavoidable",
      "style": "align with project eslint + prettier; no broad disables"
    },
    "output": {
      "patch": "unified diff including refactored TS file + tests",
      "notes": [
        "TODOs / @ts-expect-error justifications",
        "commands to run typecheck and tests"
      ]
    }
  }
  